/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:border-box}html{font-family:Roboto,sans-serif;background-color:#3b042c;background:-webkit-gradient(linear,left bottom,right top,color-stop(30%,#3b042c),color-stop(60%,#9d2139),color-stop(90%,#e6510f)) no-repeat center center fixed;background:linear-gradient(to top right,#3b042c 30%,#9d2139 60%,#e6510f 90%) no-repeat center center fixed;background-repeat:no-repeat;background-size:cover}@media screen and (min-width:600px){html{background:url(../img/beaver-large.jpg) no-repeat center center fixed;background-repeat:no-repeat;background-size:cover}}li,p,ul{margin:0;padding:0}.trim-long-text{position:relative;width:70%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.trim-long-text::after{content:'...';position:relative;width:10px;height:10px;top:0;bottom:0}.highlight-long-text{padding:12px;margin:1rem;width:90%;white-space:wrap;word-break:break-all;text-indent:1rem;border:1px solid #45443f;border-radius:1px}.preloader{z-index:3;position:fixed;top:0;width:100%;height:100vh;background-color:#2b001e;-webkit-transition:opacity ease-out .5s;transition:opacity ease-out .5s}.preloader .wrapper{position:absolute;width:12rem;left:0;right:0;top:5rem;bottom:17rem;margin-left:auto;margin-right:auto}.preloader .wrapper .intro{color:#fff;font-size:3rem;display:block;margin:2rem .7rem}.preloader .wrapper .orbs{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.preloader .wrapper .orbs .orb{display:block;width:5px;height:5px;background-color:#fff;border-radius:50px;-webkit-animation:load 10s infinite 0s;animation:load 10s infinite 0s}.preloader .wrapper .orbs .orb:nth-of-type(2){-webkit-animation:load 10s infinite 1s;animation:load 10s infinite 1s}.preloader .wrapper .orbs .orb:nth-of-type(3){-webkit-animation:load 10s infinite 2s;animation:load 10s infinite 2s}.preloader .wrapper .orbs .orb:nth-of-type(4){-webkit-animation:load 10s infinite 3s;animation:load 10s infinite 3s}.preloader .wrapper .orbs .orb:nth-of-type(5){-webkit-animation:load 10s infinite 4s;animation:load 10s infinite 4s}@media screen and (min-width:599px){.preloader .wrapper{bottom:.5rem}}@media screen and (min-width:599px) and (min-height:420px){.preloader .wrapper{bottom:initial;top:10rem}}@-webkit-keyframes load{0%{background-color:#fff}49%{background-color:#fff}51%{background-color:#da4531}100%{background-color:#da4531}}@keyframes load{0%{background-color:#fff}49%{background-color:#fff}51%{background-color:#da4531}100%{background-color:#da4531}}.stop-preloader{opacity:0;pointer-events:none}.issue-alert-prompt{width:100%;max-width:500px;margin:2rem auto}.issue-alert-prompt .head{color:#fff;background-color:#45443f;background:-webkit-gradient(linear,left top,left bottom,from(#616056),to(#403f3a));background:linear-gradient(#616056,#403f3a);padding:.3rem;border-radius:5px 5px 0 0}.issue-alert-prompt .head__options{list-style:none;display:inline-block;margin:0 .5rem 0 .2rem}.issue-alert-prompt .head__options .icon{vertical-align:middle;width:1.2rem;height:1.2rem;border-radius:50px;display:inline-block;background-color:#807e7c;background:-webkit-gradient(linear,left top,left bottom,from(#807e7c),to(#616056));background:linear-gradient(#807e7c,#616056);text-align:center;color:#45443f;font-weight:700;font-size:1.1rem}.issue-alert-prompt .head__options .icon--close{background-color:#dd5c24;background:-webkit-gradient(linear,left top,left bottom,from(#e2885e),to(#dd5c24));background:linear-gradient(#e2885e,#dd5c24);text-align:center}.issue-alert-prompt .head__whoami{display:inline-block;vertical-align:middle;font-weight:700}.issue-alert-prompt .text-body{text-align:center;background-color:#f2f1f0;border:1px solid #45443f;padding-bottom:2rem}.issue-alert-prompt .text-body__title{color:#4c4c4c;margin:0;margin-top:1rem;font-size:1.5rem}.issue-alert-prompt .text-body__details{color:#4c4c4c;margin-top:1rem}.issue-alert-prompt .text-body__help{display:inline-block;margin-top:1rem}.hide-alert{display:none}.terminal{font-family:'Ubuntu Mono',monospace;color:#fff;width:100vw;font-size:1.5rem;box-shadow:0 2px 25px -8px rgba(0,0,0,.75)}@media screen and (min-width:900px){.terminal{max-width:60rem;margin:4rem auto}}.terminal .head{background-color:#45443f;background:-webkit-gradient(linear,left top,left bottom,from(#616056),to(#403f3a));background:linear-gradient(#616056,#403f3a);padding:.3rem;border-radius:5px 5px 0 0}.terminal .head__options{list-style:none;display:inline-block;margin:0 .5rem 0 .2rem}.terminal .head__options .icon{vertical-align:middle;width:1.2rem;height:1.2rem;border-radius:50px;display:inline-block;background-color:#807e7c;background:-webkit-gradient(linear,left top,left bottom,from(#807e7c),to(#616056));background:linear-gradient(#807e7c,#616056);text-align:center;color:#45443f;font-weight:700;font-size:1.1rem}.terminal .head__options .icon--close{background-color:#dd5c24;background:-webkit-gradient(linear,left top,left bottom,from(#e2885e),to(#dd5c24));background:linear-gradient(#e2885e,#dd5c24);text-align:center}.terminal .head__whoami{display:inline-block;vertical-align:middle;font-weight:700}.terminal .window{background-color:#300a24;min-height:500px;padding:.3rem;padding-bottom:5rem;opacity:.9}.terminal .window__text--user{color:#87e033;font-weight:700}.terminal .window .tilde{color:#789ac8}.terminal .window .grep{color:#ef2827;font-weight:700}.terminal .window .dir{font-weight:700;color:#789ac8}.terminal .window .current-tasks{list-style:none}.form{display:inline-block}.form__input{background-color:inherit;border:none;color:#789ac8;font-weight:700;caret-color:#fff}.form__input::-webkit-input-placeholder{color:#fff;font-weight:400}.form__input::-moz-placeholder{color:#fff;font-weight:400}.form__input:-ms-input-placeholder{color:#fff;font-weight:400}.form__input::-ms-input-placeholder{color:#fff;font-weight:400}.form__input::placeholder{color:#fff;font-weight:400}.form__btn{width:6rem;background-color:inherit;color:#fff;border:none;font-weight:700;text-decoration:underline;cursor:pointer}.form__btn--add{color:#87e033}.form__btn--remove{color:#ef2827}.prompt{background-color:#fff;margin-left:.3rem;-webkit-animation:1s blink 1s infinite;animation:1s blink 1s infinite;color:transparent;font-size:1rem}@-webkit-keyframes blink{0%{opacity:1}50%{opacity:1}51%{opacity:0}99%{opacity:0}100%{opacity:0}}@keyframes blink{0%{opacity:1}50%{opacity:1}51%{opacity:0}99%{opacity:0}100%{opacity:0}}.folders-tray{width:100vw;display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-pack:start;justify-content:flex-start}@media screen and (min-width:900px){.folders-tray{max-width:60rem;margin:4rem auto}}.folders-tray .folder{display:inline-block;margin:2rem 1rem}.folders-tray .folder .folder__icon{display:block;position:relative;background-color:#e14b17;background-image:radial-gradient(circle at top,#efc18c 5%,#e14b17);height:50px;width:100px}.folders-tray .folder .folder__icon::after{position:absolute;top:-5px;left:2.5px;content:'';height:5px;width:95px;background-color:#f4f4f4}.folders-tray .folder .folder__icon::before{position:absolute;top:-8px;left:2.5px;content:'';height:5px;width:25px;border-radius:2px 2px 0 0;background-color:#f4f4f4}.folders-tray .folder__title{margin:.5rem auto;max-width:100px;display:block;text-align:center;color:#f4f4f4}.animate-created-folder{-webkit-animation:folder-popup 2s ease-in .5s;animation:folder-popup 2s ease-in .5s}@-webkit-keyframes folder-popup{0%{-webkit-transform:rotateZ(-30deg) scale(.7,.7);transform:rotateZ(-30deg) scale(.7,.7)}50%{-webkit-transform:rotateZ(10deg) scale(1.2,1.2);transform:rotateZ(10deg) scale(1.2,1.2)}100%{-webkit-transform:rotateZ(0) scale(1,1);transform:rotateZ(0) scale(1,1)}}@keyframes folder-popup{0%{-webkit-transform:rotateZ(-30deg) scale(.7,.7);transform:rotateZ(-30deg) scale(.7,.7)}50%{-webkit-transform:rotateZ(10deg) scale(1.2,1.2);transform:rotateZ(10deg) scale(1.2,1.2)}100%{-webkit-transform:rotateZ(0) scale(1,1);transform:rotateZ(0) scale(1,1)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
